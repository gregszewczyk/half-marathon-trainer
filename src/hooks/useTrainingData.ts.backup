import { useState, useEffect } from 'react'

export function useTrainingStats() {
  const [completionData, setCompletionData] = useState({
    daysToRace: 83,
    weekCompletion: 0,
    weekDistance: 22,
    predictedTime: "2:00:00"
  });

  useEffect(() => {
    const fetchCompletionData = async () => {
      try {
        // Calculate days to race
        const raceDate = new Date('2025-10-12');
        const today = new Date();
        const daysToRace = Math.ceil((raceDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24));
        
        // Fetch actual completion data from database
        const response = await fetch('/api/feedback?weekNumber=1');
        let weekCompletion = 0;
        
        if (response.ok) {
          const { feedback } = await response.json();
          
          // Calculate completion percentage based on actual running sessions completed
          const totalRunningSessions = 4; // Week 1 has 4 running sessions
          const completedSessions = Array.isArray(feedback) ? 
            feedback.filter((f: any) => f.completed === 'yes' && f.sessionType === 'running').length : 0;
          
          weekCompletion = Math.round((completedSessions / totalRunningSessions) * 100);
        }

        setCompletionData({
          daysToRace,
          weekCompletion,
          weekDistance: 22, // Week 1 total: 5+5+4+8 = 22km
          predictedTime: "2:00:00"
        });
        
      } catch (error) {
        console.error('Error fetching completion data:', error);
        // Fallback to default values
        const raceDate = new Date('2025-10-12');
        const today = new Date();
        const daysToRace = Math.ceil((raceDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24));
        
        setCompletionData({
          daysToRace,
          weekCompletion: 0,
          weekDistance: 22,
          predictedTime: "2:00:00"
        });
      }
    };

    fetchCompletionData();
  }, []);

  return completionData;
}